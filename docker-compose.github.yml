# GitHub 版本 Docker Compose 配置
# 支持多种 yt-dlp 源和环境配置

version: '3.8'

services:
  yt-dlp-web-github:
    build:
      context: .
      dockerfile: Dockerfile.github
      args:
        BUILDTIME: ${BUILDTIME:-}
        VERSION: ${VERSION:-1.0.0}
        REVISION: ${REVISION:-}
        YTDLP_SOURCE: ${YTDLP_SOURCE:-github_release}
        YTDLP_VERSION: ${YTDLP_VERSION:-latest}
        ENVIRONMENT: ${ENVIRONMENT:-production}
    
    container_name: yt-dlp-web-github
    restart: unless-stopped
    
    ports:
      - "${WEB_PORT:-8080}:8080"
    
    volumes:
      # 使用命名卷避免权限问题
      - downloads:/app/downloads
      - config:/app/config
      - logs:/app/logs
      
      # 可选：挂载自定义配置
      - ./config/ytdlp-source.yml:/app/config/ytdlp-source.yml:ro
    
    environment:
      # 应用配置
      - ADMIN_USERNAME=${ADMIN_USERNAME:-admin}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin123}
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-change-in-production}
      - DOWNLOAD_FOLDER=/app/downloads
      
      # yt-dlp 源配置
      - YTDLP_SOURCE=${YTDLP_SOURCE:-github_release}
      - YTDLP_VERSION=${YTDLP_VERSION:-latest}
      - YTDLP_NO_LAZY_EXTRACTORS=1
      
      # 环境配置
      - ENVIRONMENT=${ENVIRONMENT:-production}
      - TZ=${TZ:-Asia/Shanghai}
      
      # 调试配置
      - DEBUG=${DEBUG:-false}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    
    networks:
      - yt-dlp-network
    
    labels:
      # 应用信息
      - "app.name=yt-dlp-web-github"
      - "app.description=YouTube下载器Web界面 - GitHub版本"
      - "app.version=${VERSION:-1.0.0}"
      - "ytdlp.source=${YTDLP_SOURCE:-github_release}"
      
      # Traefik 标签（如果使用）
      - "traefik.enable=true"
      - "traefik.http.routers.yt-dlp-github.rule=Host(`${DOMAIN:-yt-dlp.local}`)"
      - "traefik.http.services.yt-dlp-github.loadbalancer.server.port=8080"
      
      # Portainer 标签
      - "portainer.group=media"

  # 可选：Redis 缓存服务
  redis:
    image: redis:7-alpine
    container_name: yt-dlp-redis
    restart: unless-stopped
    
    volumes:
      - redis_data:/data
    
    networks:
      - yt-dlp-network
    
    profiles:
      - cache
    
    labels:
      - "app.name=yt-dlp-redis"
      - "app.description=Redis缓存服务"

  # 可选：监控服务
  prometheus:
    image: prom/prometheus:latest
    container_name: yt-dlp-prometheus
    restart: unless-stopped
    
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    
    networks:
      - yt-dlp-network
    
    profiles:
      - monitoring
    
    labels:
      - "app.name=yt-dlp-prometheus"
      - "app.description=Prometheus监控"

networks:
  yt-dlp-network:
    driver: bridge
    labels:
      - "app.network=yt-dlp"

volumes:
  downloads:
    driver: local
    labels:
      - "app.volume=downloads"
  
  config:
    driver: local
    labels:
      - "app.volume=config"
  
  logs:
    driver: local
    labels:
      - "app.volume=logs"
  
  redis_data:
    driver: local
    labels:
      - "app.volume=redis"
  
  prometheus_data:
    driver: local
    labels:
      - "app.volume=prometheus"
